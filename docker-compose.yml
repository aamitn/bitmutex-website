version: "3.8"

services:
  postgres:
    image: postgres:15
    container_name: bitmutex-postgres
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 1234qwer
      POSTGRES_DB: strapi-bitmutex
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  strapi:
    build: ./server
    container_name: bitmutex-strapi
    restart: always
    depends_on:
      - postgres
    environment:
      # Core server config
      HOST: 0.0.0.0
      PORT: 1337
      NODE_ENV: production

      # Security Keys
      APP_KEYS: "randomkey6,randomkey7"
      API_TOKEN_SALT: randomkey5
      ADMIN_JWT_SECRET: randomkey4
      TRANSFER_TOKEN_SALT: randomkey3
      JWT_SECRET: randomkey1
      ENCRYPTION_KEY: randomkey

      # Preview & client URLs
      PREVIEW_SECRET: your-secret-key
      CLIENT_URL: http://localhost:3000

      # Live Chat Discord Bot
      DISCORD_BOT_TOKEN: youdiscordbototken
      DISCORD_CHANNEL_ID: 1349063933599678618
      DISCORD_GUILD_ID: 1349059955885473823
      DISCORD_ADMIN_ID: 146662188122243072

      # Database Config
      DATABASE_CLIENT: postgres
      DATABASE_HOST: postgres
      DATABASE_PORT: 5432
      DATABASE_NAME: strapi-bitmutex
      DATABASE_USERNAME: postgres
      DATABASE_PASSWORD: 1234qwer

      # Cal.com webhook
      CAL_WEBHOOK_URL: http://localhost:1337/api/cal-webhook

      # SMTP
      SMTP_HOST: smtp.zoho.in
      SMTP_PORT: 587
      SMTP_USERNAME: noreply@bitmutex.com
      SMTP_PASSWORD: SMTP_PASSWORD_HERE
      SMTP_DEFAULT_FROM: noreply@bitmutex.com
      SMTP_DEFAULT_REPLY_TO: support@bitmtuex.com

      # Admin user auto-creation
      AUTO_CREATE_ADMIN: false
      ADMIN_EMAIL: admin@bitmutex.com
      ADMIN_PASSWORD: $2a$10$joIlSsHxTGdb8XT7cfcVzO5JgUiQSWgbFwbNrT2D/sMbuyhc2y9zW

      # Algolia
      ALGOLIA_APP_ID: algoliappid
      ALGOLIA_ADMIN_KEY: algoliadminkey
    volumes:
      - strapi-uploads:/app/public/uploads
      - ./server/public/uploads:/app/public/uploads
      - ./seed-data.tar.gz:/seed-data.tar.gz
    ports:
      - "1337:1337"
    entrypoint: |
      /bin/sh -c '
      if [ -f /seed-data.tar.gz ] && [ ! -f /app/.imported ]; then
        echo "‚úÖ Seed data found, importing for the first time..."
        cp /seed-data.tar.gz /app/seed-data.tar.gz
        yarn strapi import -f /app/seed-data.tar.gz --force
        touch /app/.imported
      else
        echo "‚ö†Ô∏è No seed data found or data already imported, skipping import..."
      fi
      echo "üöÄ Starting Strapi..."
      yarn develop
      '
    healthcheck:
      test: ["CMD-SHELL", "curl -fs http://localhost:1337/_health || exit 1"]
      interval: 10s
      timeout: 2s
      retries: 2

  nextjs:
    build: ./client
    container_name: bitmutex-nextjs
    restart: always
    depends_on:
      strapi:
        condition: service_healthy
    environment:
      # Strapi URLs
      STRAPI_BASE_URL: http://localhost:1337
      NEXT_PUBLIC_STRAPI_BASE_URL: http://localhost:1337

      # Next.js base URL
      NEXT_PUBLIC_BASE_URL: http://localhost:3000
      HOST: localhost

      # Status Page
      NEXT_PUBLIC_STATUS_PAGE_URL: https://status.bitmutex.com

      # Appointment Scheduling
      NEXT_PUBLIC_APPOINTMENT_URL: "https://cal.com/bitmutex"

      # Admin Email
      ADMIN_EMAIL: test@gmail.com
      NEXT_PUBLIC_ADMIN_EMAIL: test@gmail.com

      # Environment Mode
      NODE_ENV: production

      # Image Host
      IMAGE_HOSTNAME: localhost

      # GitHub Token
      NEXT_PUBLIC_GITHUB_TOKEN: ghtoken

      # Algolia Public
      NEXT_PUBLIC_ALGOLIA_APP_ID: algoliappid
      NEXT_PUBLIC_ALGOLIA_SEARCH_API_KEY: algoliatoken

      # API Secret for Previews
      PREVIEW_SECRET: your-secret-key
    ports:
      - "3000:3000"
    entrypoint: ["/bin/sh", "-c", "
      echo 'Waiting for Strapi to be ready...' && \
      echo 'Strapi is ready, building Next.js...' && \
      yarn build && yarn start "]

volumes:
  postgres-data:
  strapi-uploads:
