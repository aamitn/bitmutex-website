name: Auto Release

on:
  push:
    branches:
      - "**"       # all branches
    tags:
      - "v*"       # all tags starting with v

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Detect previous tag
        id: prev_tag
        run: |
          prev_tag=$(git describe --tags --abbrev=0 $(git rev-list --tags --skip=1 --max-count=1) 2>/dev/null || echo "none")
          echo "previous_tag=$prev_tag" >> $GITHUB_OUTPUT

      - name: Generate changelog
        id: changelog
        run: |
          # If we have a previous tag, use it, otherwise just log recent commits
          if [ "${{ steps.prev_tag.outputs.previous_tag }}" != "none" ]; then
            commit_range="${{ steps.prev_tag.outputs.previous_tag }}..HEAD"
          else
            commit_range="HEAD~10..HEAD"
          fi

          commit_count=$(git rev-list --count $commit_range)

          echo "## 📝 Changelog" > changelog.md
          echo "" >> changelog.md
          echo "| Commit | Message | Author | Date |" >> changelog.md
          echo "| ------ | ------- | ------ | ---- |" >> changelog.md

          git log $commit_range \
            --pretty=format:"| [%h](https://github.com/${{ github.repository }}/commit/%H) | %s | %an | %ad |" \
            --date=short >> changelog.md

          echo "commit_count=$commit_count" >> $GITHUB_OUTPUT
          echo "changelog<<EOF" >> $GITHUB_OUTPUT
          cat changelog.md >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Set release name & tag
        id: set_names
        run: |
          if [[ "${GITHUB_REF}" == refs/tags/* ]]; then
            tag_name="${GITHUB_REF#refs/tags/}"
            release_name="$tag_name"
          else
            branch="${GITHUB_REF#refs/heads/}"
            short_sha=$(git rev-parse --short HEAD)
            tag_name="snapshot-${branch}-${short_sha}"
            release_name="Snapshot - ${branch}"
          fi

          echo "tag_name=$tag_name" >> $GITHUB_OUTPUT
          echo "release_name=$release_name" >> $GITHUB_OUTPUT

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.set_names.outputs.tag_name }}
          name: ${{ steps.set_names.outputs.release_name }}
          body: |
            ## 📦 Release Information
            **Tag/Name:** `${{ steps.set_names.outputs.tag_name }}`
            **Date:** $(date -u +"%Y-%m-%d %H:%M:%S UTC")
            **Author:** ${{ github.actor }}
            **Repository:** [${{ github.repository }}](https://github.com/${{ github.repository }})
            **Previous Tag:** `${{ steps.prev_tag.outputs.previous_tag }}`
            **Commit Range:** `${{ steps.prev_tag.outputs.previous_tag }}..${{ github.ref_name }}`
            **Number of Commits:** `${{ steps.changelog.outputs.commit_count }}`
            **Branch:** `${{ github.ref_name }}`

            ---
            ${{ steps.changelog.outputs.changelog }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
